name: Build Latest OpenWrt with Arion_V2 Overlay

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 1" # Every Monday at 02:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget curl

      - name: Get latest OpenWrt stable release tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/openwrt/openwrt/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Latest stable tag is $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Checkout OpenWrt source at latest tag
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: ${{ steps.get_latest_tag.outputs.tag }}

      - name: Checkout arion_v2 device files
        uses: actions/checkout@v4
        with:
          path: "arion_v2_files"
          ref: "main"

      - name: Overlay arion_v2 files
        run: |
          echo "Copying device-specific files from arion_v2 branch..."
          cp arion_v2_files/target/linux/ramips/dts/mt7621_bolt_arion-v2.dts target/linux/ramips/dts/
          cp arion_v2_files/target/linux/ramips/image/mt7621.mk target/linux/ramips/image/
          cp arion_v2_files/target/linux/ramips/mt7621/base-files/etc/board.d/02_network target/linux/ramips/mt7621/base-files/etc/board.d/
          cp arion_v2_files/.config.seed ./.config.seed
          echo "Files copied successfully."

      - name: Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Copy build configuration
        run: |
          cp .config.seed .config
          echo "Using .config.seed for build configuration."

      - name: Build the firmware
        run: |
          make defconfig
          make -j$(nproc) download
          make -j$(nproc) V=s

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware-${{ steps.get_latest_tag.outputs.tag }}-arion_v2
          path: bin/targets/**/*.bin
